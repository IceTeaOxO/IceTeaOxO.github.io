<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Pure White</title>
    <link>https://IceTeaOxO.github.io/tags/docker/</link>
    <description>Recent content in Docker on Pure White</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-tw</language>
    <lastBuildDate>Sun, 15 Jan 2023 19:40:27 +0800</lastBuildDate><atom:link href="https://IceTeaOxO.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker</title>
      <link>https://IceTeaOxO.github.io/post/docker/docker/</link>
      <pubDate>Sun, 15 Jan 2023 19:40:27 +0800</pubDate>
      
      <guid>https://IceTeaOxO.github.io/post/docker/docker/</guid>
      <description>DOCKER 消除版本衝突，提供標準化環境 可以快速啟動，佔用硬體空間更小 DOCKER 簡介、架構 image 唯獨的模板，可以包含完整的作業系統，也可以用來建立container 擁有不同的tag 像是推積木:App image&amp;gt;Tomcat image&amp;gt;MySQL image&amp;gt;OS image container container是從image建立的執行實例，可以被啟動、開始、停止、刪除，每個container都是隔離的 透過image執行起來的process，同一個image可以啟動多個container container之間的環境是隔離的，就算同時開port 8080也不會衝到 repository(如Docker Hub) repository是存放image的場所 分為公開和私有 倉庫註冊伺服器Registry，可存放多個repository 底層技術是linux kernel,Namespace,Cgroup，所以要先確認是否有被支援
Namespace用來作環境隔離用，Cgroup用來做系統資源的管理
DOCKER系統架構:主要為client-server，server的部分稱為Docker Daemon Docker Daemon:用來管理image,啟動、停止container，提供Restful API給使用者操作及顯示資訊。 Docker Client:使用Restful API連到Daemon，並提供command line的方式讓使用者操作 Image哪裡來 Docker Hub pull 從另一台電腦image export在import到自己電腦 自行撰寫Dockerfile DOCKER COMMAND 重開機自動啟動docker service:systemctl enable docker 調整docker.sock檔案權限:chmon 777 /var/run/docker.sock 從Docker Hub搜尋image:docker search ubuntu -f is-official=true pull image:docker pull ubuntu 查看本機有的image:docker images 執行container並進入terminal:docker run -it ubuntu /bin/bash(會進入container terminal，可以在裡面安裝其他東西) 查看container IP:cat /etc/hosts 要使用ifconfig 需要安裝net-tools:apt-get install -y net-tools 確認正在運行的container:docker ps -a 關閉container:exit 不停止container只退出docker container terminal:ctrl+p之後在ctrl+q 提交更新後的副本:docker commit -m &amp;quot;&amp;quot; &amp;hellip; command line整理 docker search docker pull docker images docker run docker ps docker rm #移除容器 docker rmi #移除image(在刪除image之前要先刪掉依賴的container) systemctl stop firewalld#關閉防火牆 DOCKER FILE 補充資料</description>
    </item>
    
  </channel>
</rss>
