<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Pure White</title>
    <link>https://IceTeaOxO.github.io/tags/c#/</link>
    <description>Recent content in C# on Pure White</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-tw</language>
    <lastBuildDate>Sun, 15 Jan 2023 20:46:22 +0800</lastBuildDate><atom:link href="https://IceTeaOxO.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C#簡介</title>
      <link>https://IceTeaOxO.github.io/post/csharp/intro/</link>
      <pubDate>Sun, 15 Jan 2023 20:46:22 +0800</pubDate>
      
      <guid>https://IceTeaOxO.github.io/post/csharp/intro/</guid>
      <description>C#文件
C#核心是物件導向的語言，可以定義類型及行為
垃圾收集 可為null 例外狀況處理 Lambda運算式:支援功能型程式設計 語言整合式查詢(LINQ) 非同步作業:支援建立分散式系統的語法 具統一的類型系統:所有的型別都繼承自object 支援定義參考型別和實數值型別 動態設定物件和輕量結構的內嵌儲存體 支援泛型方法和類型 強調版本控制:virtual和override修飾詞、方法多載解析的規則，對明確介面成員宣告的支援 .NET C#在.NET上執行
CLR:虛擬執行系統和一組類別庫 CLI:建立執行和開發環境的基礎 C#原始程式碼會先編譯成符合CLI規格(IL)的中繼語言，IL程式碼和資源都會儲存在袁建中，通常會有.dll的副檔名，元件包含的資訊會提供元件類型、版本和文化特性等資訊
執行C#程式時，會將元件載入至CLR，CLR會執行及時(JIT)編譯，將IL程式碼轉換成原生電烤指令。CLR提供自動垃圾收集、例外狀況處理和資源管理，由CLR執行的程式碼稱為&amp;quot;受控碼&amp;quot;。
&amp;ldquo;非受控碼&amp;quot;會編譯成以特定平台為目標的原生電腦語言。
C#編譯器所產生的IL程式碼符合一般類型規格(CTS)，可以和從.NET版本的F#、VB、C++產生的程式碼互動，單一元件可能包含多個以不同.NET語言撰寫的模組。類型可以彼此參考(如果以相同語言撰寫)。
using NameSpaceclass className{static void Main(){Console.WriteLine(&amp;#34;Hello, World&amp;#34;);}} 命名空間包含型別和其他命名空間，如System包含Console類別和其他命名空間如IO、Collections，能夠以非限定的方式使用屬於該命名空間成員的型別(System.Console.WriteLine-&amp;gt;Console.WriteLine)
static方法不需要參考特定物件即可運作
執行個體方法可以使用this參考特定的封入物件來執行個體
慣例，名為Main的靜態方法可作為C#程式的進入點
型別與變數 C#中有兩種型別:實值型別和參考型別
實值型別的變數包含其資料，又稱為物件，每個變數都有自己的資料副本，可進一步分成:
簡單型別 帶正負號的整數:short,int,long 不帶正負號的整數:ushort,uint,ulong Unidoce字元:utf-16 IEEE二進位浮點數:double 高精確度十進位浮點數: 布林值:bool 列舉型別 表單enum E {&amp;hellip;}的使用者定義型別。enum型別是包含具名常數的不同型別，每個enum都具有一個基礎型別，必須是八種整數型別之一，enum型別的值組和基礎型別的值組相同 結構型別 使用者定義型別，格是為struct S {&amp;hellip;} 可為null的實值型別 含有null值的所有其他數值型別的擴充 元組實值型別 使用者定義型別，格式為(T1,T2,&amp;hellip;) 參考型別的變數會儲存其對資料的參考，可能會有兩個變數參考同一個物件，對變數進行作業會影響另一變數所參考的物件，可進一步分割成:
類別型別 所有其他型別的基底類別:object Unicode字串:代表一系列utf-16程式碼單位 使用者定義型別，格式為class C {&amp;hellip;} 介面型別 使用者定義型別，格式為interface I {&amp;hellip;} 陣列型別 一為、多為和不規則，如:int[]、int[,]、int[][] 委派型別 使用者定義型別，格式為 delegate int D(&amp;hellip;) 識別碼是變數名稱，識別碼是unicode字元序列，可以是C#保留字(如果前面加上@)，在與其他語言互動時，使用保留字作為識別碼會很有用</description>
    </item>
    
  </channel>
</rss>
